<p>Une application qui permet d'analyser un même panier sur les différents magasins de drives (Auchan, Intermarché, Leclerc, etc...) et permet ainsi de faire ses courses et commander sur le magasin le moins cher près de chez soi.</p>
<p>Quand j'ai rejoint l'équipe, j'ai travaillé autant sur l'API back-end basé sur Ruby on Rails que sur le front end avec le <strong>framework javascript Angular</strong>.</p>
J'ai eu 2 missions principales sur cette application: 
<ul>
  <li>
    <p>Sur la partie visible/publique du site, j'ai implémenté entre autres la partie graphique qui permet de choisir les différents magasins de proximités. Basé sur la <strong>Google Map API</strong>, et sur la localisation de l'utilisateur, l'utilisateur peut choisir dans quels magasins nous allions comparer son panier de courses.</p>
  </li>
  <li>
    <p>Sur la partie du site, "gestion et administration", une partie de l'équipe s'occupait de l'implémentation des crawlers qui agrégeaient les produits des différents stores dans une base locale. De mon côté, une des difficultés de cette application a été de construire l'algorithme qui permet de retrouver le même produit dans les autres magasins de comparaison. En effet, avec le volume de produits à traiter, il fallait faire quelque chose qui soit aussi automatisé que possible. J'ai donc mis en place un système automatisé qui trouve les produits équivalents dans les différents magasins, via <strong><a href="https://www.elastic.co/">Elastic Search</a></strong>, en se basant sur le nom, les marques, la taille, les quantités, etc... Cet algorithme a permis de traiter la majeure partie des produits mais certains restés sans équivalents car Elastic search donnait des résultats trop aléatoires. Dans ce cas, on a mis en place un traitement semi-automatisé, avec une interface rapide pour permettre à un humain de choisir le produit correspondant ou au moins un substitut.</p>
  </li>
</ul>
